@page
@using WscPrinter_Setup.ApiModels
@using WscPrinter_Setup.Libs.Session
@model WscPrinter_Setup.Pages.WscBuilder.Step07_choose_layout.Step07ChooseLayoutModel
@{

  string theGuid1 = Guid.NewGuid().ToString();
  string theGuid2 = Guid.NewGuid().ToString();
  bool MOCK_MODE = false;
  WebsiteEntity[] MokkaArray = {
      new WebsiteEntity { Img = "/img/sampleWebsitesPreview/DynamicSoft-small.png", TemplateId = theGuid1, TemplateName = "Dynamic Institutional", TargetLink = "https://www.dynamicsoft.it" }
        , new WebsiteEntity { Img = "/img/sampleWebsitesPreview/SviluppoWscPrinter-small.png", TemplateId = theGuid2, TemplateName = "WscPrinter test", TargetLink = "https://sviluppo.wscprinter.it" }
        , new WebsiteEntity { Img = "/img/sampleWebsitesPreview/template-small.png", TemplateId = theGuid1, TemplateName = "Dynamic Institutional", TargetLink = "https://www.dynamicsoft.it" }
        , new WebsiteEntity { Img = "/img/sampleWebsitesPreview/SviluppoWscPrinter-small.png", TemplateId = theGuid2, TemplateName = "WscPrinter test", TargetLink = "https://sviluppo.wscprinter.it" }
        , new WebsiteEntity { Img = "/img/sampleWebsitesPreview/DynamicSoft-small.png", TemplateId = theGuid1, TemplateName = "Dynamic Institutional", TargetLink = "https://www.dynamicsoft.it" }
        , new WebsiteEntity { Img = "/img/sampleWebsitesPreview/SviluppoWscPrinter-small.png", TemplateId = theGuid2, TemplateName = "WscPrinter test", TargetLink = "https://sviluppo.wscprinter.it" }
        , new WebsiteEntity { Img = "/img/sampleWebsitesPreview/template-small.png", TemplateId = theGuid1, TemplateName = "Dynamic Institutional", TargetLink = "https://www.dynamicsoft.it" }
        , new WebsiteEntity { Img = "/img/sampleWebsitesPreview/SviluppoWscPrinter-small.png", TemplateId = theGuid2, TemplateName = "WscPrinter test", TargetLink = "https://sviluppo.wscprinter.it" }
        , new WebsiteEntity { Img = "/img/sampleWebsitesPreview/DynamicSoft-small.png", TemplateId = theGuid1, TemplateName = "Dynamic Institutional", TargetLink = "https://www.dynamicsoft.it" }
    };
  List<WebsiteEntity> theLItems = new List<WebsiteEntity>();
  if (MOCK_MODE) {
    theLItems.Concat(MokkaArray);
  }
  //
  if (Model.ResponseCacheAttributeFromServer != null) {
    foreach (WebsiteEntity theEnt in Model.ResponseCacheAttributeFromServer) {
      theLItems.Add(theEnt);
    }
  }
  WebsiteEntity[] theItems = theLItems.ToArray();


  string[] fakeimgs = {
    "/img/sampleWebsitesPreview/DynamicSoft-small.png"
    , "/img/sampleWebsitesPreview/SviluppoWscPrinter-small.png"
    , "/img/sampleWebsitesPreview/template-small.png"
  };

  string[] cssClasses = {
    "left withbord"
    , "middle withbord"
    , "right withbord"
  };

  ViewData["Title"] = "Step-7";

}

<style>
    .Row {
        display: table;
        width: 100%; /*Optional*/
        table-layout: fixed; /*Optional*/
        border-spacing: 10px; /*Optional*/
    }

    .Column {
        display: table-cell;
        background-color: aqua; /*Optional*/
    }

    .withbord {
        border: 2px solid;
    }

    spinTop {
        width: 100%;
        height: 100%;
        position: absolute;
        top: 0;
        left: 0;
    }
</style>

<!--
=============================================
  WBUILDER - STEP 7
==============================================
-->

<div class="app-screen-preview-two lg-container">
    <div class="container">
        <div class="wbuilder-info-2 text-center mb-0 md-mb-70">
            <div class="logo mt-20 md-mt-10"><a href="index-customer-support.html"><img src="images/website/logo_wscprinter.png" alt=""></a></div>
            <h2 class="mt-20 md-mt-10"><b>Scegli il design per il tuo sito Web To Print</b></h2>
            <p class="mt-20">Scegli tra oltre 50 template di siti web personalizzabili<br /> creati per soddisfare le tue esigenze di business.</p>
        </div>
    </div>
</div>
<div class="pt-10 pb-50 md-pt-100 md-pb-150">

    <div class="wbuild-large-container">

        <div class="row">
            @for (int xxx = 0; xxx < theItems.Length; xxx++) {
            <div class="col-lg-4">
                <div class="theme-demo isreadyimage" onmouseover="scrollImage_hover();" id="container_@theItems[xxx].TemplateId">
                    <div class="content-wrapper">
                        <div class="title-wrapper">
                            <button onclick="openTabWithLink('@theItems[xxx].TargetLink', '@theItems[xxx].TemplateName')" class="preview"><span class="link-wrapper"> Anteprima <i class="fa fa-external-link"></i></span></button>
                            <button onclick="buytheLink('@theItems[xxx].TargetLink', '@theItems[xxx].TemplateId', '@theItems[xxx].TemplateName', '@theItems[xxx].Img' )" class="choose"><span class="link-wrapper">Usa questo design</span></button>
                        </div>
                    </div>
                    <div class="image-wrapper">
                        <img id="@theItems[xxx].TemplateId" src="/images/website/20817-skeleton-loading-card.gif" alt="">
                    </div>
                </div>
            </div>
                }
        </div>
    </div>
</div>


<script type="text/javascript">
  const alltemplatesCount = @theItems.Length;
  const MAX_RETRIES = 10;
  document.addEventListener('DOMContentLoaded'
    , (event) => {
      @for (int xxx = 0; xxx < theItems.Length; xxx++) {
        @:initImgWaiter('@theItems[xxx].TemplateId', 'divWithBckGndStImg_@xxx', '@theItems[xxx].Img', 0);
      }
    }
  );

  function initImgWaiter(key, divContainerId, ImgLink){
   
    checkImageIsReady(key, divContainerId, ImgLink, 0);
  }
  
  function replaceImage(divContainerId, imgLink) {
      $("#" + divContainerId).attr("src", imgLink);
        $("#container_" + divContainerId).removeClass( "isreadyimage" )
  }


  function openTabWithLink(theLink, theName) {
    alert(`@Localizer["you choose to watch"] ${theName} @Localizer["at"] ${theLink} !!!`);
    window.open(theLink, '_blank').focus();
  }
  
    function buytheLink(theLink, theKey, templateName, imgLink) {

    const url = '@Model.theApiServerConf.EndpointsUrl';
    const endpoint = '@Model.theApiServerConf.SetSelectedTemplatePath';
    const authtoken = '@Model.theApiServerConf.ApiServerToken';
    const uri = `${url}${endpoint}?authtoken=${authtoken}&key=${theKey}`;

    const xhr = new XMLHttpRequest();
    xhr.open('GET', uri, true);

    xhr.onload = function () {
        if (this.status == 200) {
            if (this.responseText.toLowerCase() === "true") {
                alert(`you choose to buy ${theLink} - ${theKey} !!!`);
                document.location.href = `/WscBuilder/Step08_ready_to_go/Index?`
                    + `theLink=${encodeURIComponent(theLink)}`
                    + `&templateName=${encodeURIComponent(templateName)}`
                    + `&imgLink=${encodeURIComponent(imgLink)}`
                    + `&templateId=${theKey}`;
            }
        }
    };

    xhr.send(null);

  }



  function checkImageIsReady(theKey, divContainerId, imgLink, attemptNowIs) {
    console.log("qui daniel")
	const url = '@Model.theApiServerConf.EndpointsUrl';
    const endpoint = '@Model.theApiServerConf.CheckImgPath';
    const authtoken = '@Model.theApiServerConf.ApiServerToken';
    const uri = `${url}${endpoint}?authtoken=${authtoken}&key=${theKey}`;

    const xhr = new XMLHttpRequest();
    xhr.open('GET', uri, true);

    xhr.onload = function () {
      if (this.status == 200) {
        if (this.responseText.toLowerCase() === "true") {
            console.log(`image ${theKey} is ready`);
          replaceImage(theKey, imgLink);

        } else {
          if (attemptNowIs++ < MAX_RETRIES) {
            console.log(`${attemptNowIs} - still waiting for image ${theKey}`);
            setTimeout(checkImageIsReady.bind(null, theKey, divContainerId, imgLink, attemptNowIs), 5000);
          } else {
            console.log(`${attemptNowIs} - giving up on image ${theKey}`);
          }
        }
      }
    };

    xhr.send(null);

  }
</script>

<!--<a asp-page="/WscBuilder/Step08_ready_to_go/Index">Click</a>-->